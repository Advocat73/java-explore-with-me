DROP TABLE IF EXISTS users, categories, events, user_requests, ip_addresses, compilations, events_compilations, event_likes CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(254) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
  id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(50) NOT NULL,
  CONSTRAINT pk_category PRIMARY KEY (id),
  CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events (
  id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  annotation VARCHAR,
  category_id INT NOT NULL REFERENCES categories (id) ON update CASCADE,
  confirmed_requests INT,
  created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  description VARCHAR NOT NULL,
  event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  initiator_id INT NOT NULL REFERENCES users (id) ON update CASCADE,
  lat DECIMAL NOT NULL,
  lon DECIMAL NOT NULL,
  paid boolean NOT NULL,
  participant_limit INT,
  published_on TIMESTAMP WITHOUT TIME ZONE,
  request_moderation boolean NOT NULL,
  state VARCHAR NOT NULL,
  title VARCHAR NOT NULL,
  views INT,
  CONSTRAINT pk_event PRIMARY KEY (id),
  CONSTRAINT UQ_EVENT_TITLE UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS user_requests (
  id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  requester_id INT NOT NULL REFERENCES users (id) ON update CASCADE ON delete CASCADE,
  event_id INT NOT NULL REFERENCES events (id) ON update CASCADE ON delete CASCADE,
  status VARCHAR NOT NULL,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT UQ_REQUEST_REQUESTER_EVENT UNIQUE (requester_id, event_id)
);

CREATE TABLE IF NOT EXISTS ip_addresses (
  event_id INT NOT NULL REFERENCES events (id) ON update CASCADE ON delete CASCADE,
  ip_address VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
  id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  pinned boolean NOT NULL,
  title VARCHAR NOT NULL,
  CONSTRAINT pk_compilation PRIMARY KEY (id),
  CONSTRAINT UQ_COMPILATION_TITLE UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS events_compilations (
  event_id INT NOT NULL REFERENCES events (id) ON update CASCADE ON delete CASCADE,
  compilation_id INT NOT NULL REFERENCES compilations (id) ON update CASCADE ON delete CASCADE
);

CREATE TABLE IF NOT EXISTS event_likes
(
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id INT NOT NULL REFERENCES events(id) ON update CASCADE ON delete CASCADE,
    user_id INT NOT NULL REFERENCES users(id) ON update CASCADE ON delete CASCADE,
    PRIMARY KEY (event_id, user_id)
);
